#!/bin/bash
set -e

cygwin() {
    [[ "$(uname -s | sed -re "s/-.*$//")" = "CYGWIN_NT" ]]
}
xbuild=xbuild

prereqs() {
    hash cmake 2>/dev/null || { echo >&2 "Please install cmake, which is availble through your package manager or http://www.cmake.org/"; exit 1; }
    hash git 2>/dev/null || { echo >&2 "Please install git, which is availble through your package manager or http://git-scm.com/"; exit 1; }
    hash a2x 2>/dev/null || { echo >&2 "Please install asciidoc, which is availble through your package manager or http://asciidoc.org/"; exit 1; }
    hash gcc 2>/dev/null || { echo >&2 "Please install gcc, which is availble through your package manager or https://gcc.gnu.org/"; exit 1; }
    hash python3 2>/dev/null || { echo >&2 "Please install Python 3, which is availble through your package manager or https://www.python.org/"; exit 1; }
    hash pip 2>/dev/null || { echo >&2 "Please install pip, which is availble through your package manager or https://pip.pypa.io/en/latest/installing.html"; exit 1; }
    if cygwin; then
        hash msbuild.exe 2>/dev/null || { echo >&2 "Please install Microsoft.NET and add it to your %PATH%, which is availble from http://www.microsoft.com/net"; exit 1; }
        xbuild=msbuild.exe
    else
        hash xbuild 2>/dev/null || { echo >&2 "Please install mono, which is availble through your package manager or http://mono-project.com/"; exit 1; }
        hash mono 2>/dev/null || { echo >&2 "Please install mono, which is availble through your package manager or http://mono-project.com/"; exit 1; }
    fi
}

quiet() {
    output=`$* 2>&1` || { echo $output; exit 1; }
}

install() {
    wd=$(pwd)
    cd $(mktemp -d)
    $*
    cd $wd
}

asroot() {
    if [[ "$(uname -s | sed -re "s/-.*$//")" = "CYGWIN_NT" ]]; then
        quiet $*
    else
        sudo $*
    fi
}

info() {
    echo -ne '\e[0;34m'
    echo -n $*
    echo -e '\e[0m'
}

genkfs() {
    info Downloading genkfs...
    quiet git clone git://github.com/KnightOS/genkfs.git
    cd genkfs
    info Compiling genkfs...
    quiet cmake .
    quiet make
    info Installing genkfs...
    asroot make install
}

kpack() {
    info Downloading kpack...
    quiet git clone git://github.com/KnightOS/kpack.git
    cd kpack
    info Compiling kpack...
    quiet cmake .
    quiet make
    info Installing kpack...
    asroot make install
}

sass() {
    info Downloading sass...
    quiet git clone git://github.com/KnightOS/sass.git
    cd sass
    info Compiling sass...
    quiet make
    info Installing sass...
    asroot make install
}

sdk() {
    info Downloading SDK...
    quiet git clone git://github.com/KnightOS/sdk.git
    info Installing SDK requirements...
    asroot pip install docopt
    asroot pip install requests
    cd sdk
    info Installing SDK...
    asroot make install
}

prereqs
info Installing KnightOS SDK
install genkfs
install kpack
install sass
install sdk
